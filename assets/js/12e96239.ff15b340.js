"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6700],{94026:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"setup","title":"Set-up","description":"Once you\'ve installed CmdrX, you\'ll need to set it up on both the server and client to get running. Your setup code could exist within your existing codebase (for instance, if you use a framework) or it could be done with simple scripts.","source":"@site/docs/02-setup.md","sourceDirName":".","slug":"/setup","permalink":"/docs/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/BiraruX/CmdrX/edit/main/docs/02-setup.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Installation","permalink":"/docs/installation"},"next":{"title":"Updating","permalink":"/docs/updating"}}');var n=t(74848),i=t(28453);const s={},d="Set-up",a={},c=[{value:"Modifying the source code",id:"modifying-the-source-code",level:2},{value:"Server setup",id:"server-setup",level:2},{value:"Client setup",id:"client-setup",level:2},{value:"Next steps",id:"next-steps",level:2}];function l(e){const o={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"set-up",children:"Set-up"})}),"\n",(0,n.jsxs)(o.p,{children:["Once you've installed CmdrX, you'll need to set it up ",(0,n.jsx)(o.strong,{children:"on both the server and client"})," to get running. Your setup code could exist within your existing codebase (for instance, if you use a framework) or it could be done with simple scripts."]}),"\n",(0,n.jsxs)(o.admonition,{title:"Heads up",type:"info",children:[(0,n.jsx)(o.p,{children:"There are plenty of resources available to help you with CmdrX, such as this website and our Discord server, but we've been made aware of a number of DevForum guides and YouTube videos which provide incorrect or outdated instructions."}),(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"We recommend you stick to our official resources, especially if you're new to CmdrX."})," If you decide to use unofficial resources, then the level of support we can provide (for instance in our Discord server) is limited."]})]}),"\n",(0,n.jsx)(o.h2,{id:"modifying-the-source-code",children:"Modifying the source code"}),"\n",(0,n.jsxs)(o.admonition,{title:"Do not modify the source code",type:"warning",children:[(0,n.jsxs)(o.p,{children:["Please ",(0,n.jsx)(o.strong,{children:"do not"})," modify the source code of CmdrX for your game. Instead, use its API to customise the behaviour you want. Modifying the source code makes it much harder for you to receive future updates."]}),(0,n.jsxs)(o.p,{children:["There shouldn't be any reason why you need to modify the source code of CmdrX (unless you're ",(0,n.jsx)(o.a,{href:"/docs/contribute",children:"adding a new feature or fixing a bug"}),"). If there's something you think we're missing, please ",(0,n.jsx)(o.a,{href:"https://github.com/BiraruX/CmdrX/issues",children:"open an issue"}),"."]})]}),"\n",(0,n.jsxs)(o.p,{children:["Modifying the source code also includes putting your commands within CmdrX's ",(0,n.jsx)(o.code,{children:"BuiltInCommands"})," folder; don't do it. You should never touch the ",(0,n.jsx)(o.code,{children:"CmdrX"})," library or any of its components outside of code."]}),"\n",(0,n.jsx)(o.h2,{id:"server-setup",children:"Server setup"}),"\n",(0,n.jsx)(o.p,{children:"You should create a folder to keep your commands inside and then register them on the server. You only need to register commands, types and hooks on the server: CmdrX will automatically handle replication for you. There is no need to modify the actual CmdrX library itself."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-lua",children:'-- This is a script you would create in ServerScriptService, for example\r\nlocal ServerScriptService = game:GetService("ServerScriptService")\r\nlocal CmdrX = require(path.to.CmdrX) -- e.g. ServerScriptService.Libs.CmdrX\r\n\r\nCmdrX.Registry:RegisterDefaultCommands() -- Optional: This loads the default set of commands that CmdrX comes with.\r\n-- CmdrX.Registry:RegisterCommandsIn(ServerScriptService.CmdrXCommands) -- Optional: Register commands from your own folder.\r\n-- You can also register types or hooks here: read on or check the API reference!\n'})}),"\n",(0,n.jsxs)(o.p,{children:["The ",(0,n.jsxs)(o.a,{href:"/api/CmdrX",children:[(0,n.jsx)(o.code,{children:"CmdrX"})," object"]})," is the main server singleton. The ",(0,n.jsx)(o.a,{href:"/api/Registry",children:"Registry"})," is used on both the client and server, and it keeps track of all the commands, types and hooks that CmdrX knows about."]}),"\n",(0,n.jsxs)(o.p,{children:["CmdrX will automatically create and insert into StarterGui its console interface (called Window). If you'd like to (optionally) customise the look of the Window, we have ",(0,n.jsx)(o.a,{href:"/docs/advanced/customisinginterface",children:"a guide on this in our Advanced section"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["CmdrX will also insert into ",(0,n.jsx)(o.code,{children:"ReplicatedStorage"})," the ",(0,n.jsx)(o.a,{href:"/api/CmdrXClient",children:(0,n.jsx)(o.code,{children:"CmdrXClient"})})," module. On top of being the client entry point (read on below!), this module also houses stuff for internal use, like replication (any commands, types and hooks the client needs to know about) and networking."]}),"\n",(0,n.jsx)(o.admonition,{title:"You're not done yet!",type:"note",children:(0,n.jsxs)(o.p,{children:["Client setup is also required, you need to register CmdrX on the server ",(0,n.jsx)(o.em,{children:"and"})," client for it to load. Keep going! \u2193"]})}),"\n",(0,n.jsx)(o.h2,{id:"client-setup",children:"Client setup"}),"\n",(0,n.jsx)(o.p,{children:"From the client, you'll need to require the CmdrXClient module."}),"\n",(0,n.jsxs)(o.p,{children:["CmdrX will place CmdrXClient into ReplicatedStorage automatically, no action is required from you. This module includes things used by CmdrX internally, but also provides you - the developer - with ",(0,n.jsx)(o.a,{href:"/api/CmdrXClient",children:"methods to customise and tweak CmdrX"}),"."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-lua",children:'-- This is a local/client script you would create in StarterPlayerScripts, for example\r\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\r\nlocal CmdrX = require(ReplicatedStorage:WaitForChild("CmdrXClient"))\r\n\r\n-- Optional. Configurable, and you can choose multiple keys\r\nCmdrX:SetActivationKeys({ Enum.KeyCode.F2 })\r\n\r\n-- You can call any extra methods here, like SetPlaceName, or access the registry to register a hook on the client only (if you want to!)\n'})}),"\n",(0,n.jsxs)(o.p,{children:["Activation keys are used to show or hide CmdrX. By default, this is just ",(0,n.jsx)(o.code,{children:"F2"})," but you can have as many or as few keys as you'd like (even none)."]}),"\n",(0,n.jsx)(o.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,n.jsxs)(o.p,{children:["By now, CmdrX is up and running, and will work fine in studio. However, you'll probably want to ",(0,n.jsx)(o.a,{href:"/docs/commands",children:"write your own commands"})," and to run any commands in a live server, you ",(0,n.jsx)(o.strong,{children:"must"})," ",(0,n.jsx)(o.a,{href:"/docs/hooks",children:"create a BeforeRun hook"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["If you ever need help, you can check ",(0,n.jsx)(o.a,{href:"/docs/intro#how-do-i-get-help-with-CmdrX",children:"the support page"}),"."]})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>d});var r=t(96540);const n={},i=r.createContext(n);function s(e){const o=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:o},e.children)}}}]);